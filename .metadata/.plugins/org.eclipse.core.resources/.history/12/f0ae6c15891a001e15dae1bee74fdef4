package com.saleofdrink.rest;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.saleofdrink.model.Venta;
import com.saleofdrink.service.VentaService;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
@RequestMapping("/venta/")
public class VentaRest {

	@Autowired
	private VentaService ventaService;

	/* METODO LISTAR */
	@GetMapping
	private ResponseEntity<List<Venta>> getAllEntityVenta() {
		return ResponseEntity.ok(ventaService.findAll());
	}

	/* METODO GUARDAR */
	@PostMapping
	private ResponseEntity<Venta> saveVenta(@RequestBody Venta venta) {
		try {
			Venta ventaGuardada = ventaService.save(venta);
			return ResponseEntity.created(new URI("/venta/" + ventaGuardada.getIdven())).body(ventaGuardada);
		} catch (Exception e) {
			System.out.println("error: " + e.getMessage());
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
		}
	}

	/* METODO ELIMINAR */
	@DeleteMapping(value = "delete/{idVen}")
	private ResponseEntity<Boolean> deletePersona(@PathVariable("idVen") Long idven) {
		personaService.deleteById(idper);
		return ResponseEntity.ok(!(personaService.findById(idper) != null));
	}
}
